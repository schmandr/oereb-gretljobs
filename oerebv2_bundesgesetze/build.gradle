apply plugin: "de.undercouch.download"
apply plugin: "ch.so.agi.gretl"

import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

def pathToTempFolder = System.getProperty("java.io.tmpdir")

def iliModelBasis = "OeREBKRM_V2_0"

def federalLegalBasisDataFile = "OeREBKRM_V2_0_Gesetze.xml"
def federalLegalBasisDataSet = "ch.admin.bk.oereb_gesetze"
def federalConfigurationBaseUrl = "https://models.geo.admin.ch/V_D/OeREB/"

def dbSchemas = ["stage","live"]

defaultTasks "importData"

task downloadData(type: Download) {
    doFirst {
        println federalConfigurationBaseUrl + federalLegalBasisDataFile
    }
    description = "Download Bundesgesetze."
    src federalConfigurationBaseUrl + federalLegalBasisDataFile
    dest pathToTempFolder
    overwrite true
}

dbSchemas.each { dbSchema ->
    def schema = dbSchema.toString()
    task "importData_$schema"(type: Ili2pgUpdate, dependsOn: "downloadData"){
        description = "Import Bundesgesetze in das $schema Schema"
        database = [dbUriOerebV2, dbUserOerebV2, dbPwdOerebV2]
        dbschema = schema
        dataset = federalLegalBasisDataSet
        models = iliModelBasis
        disableValidation = false
        dataFile = file(Paths.get(pathToTempFolder.toString(), federalLegalBasisDataFile))
        importBid = true
        importTid = true
    }
}

task importData() {
    description = "Aggregationstask fÃ¼r Import Bundesgesetze."

    dependsOn {
        tasks.findAll { task -> task.name.startsWith('importData_') }
    }    
}
